import{u as v}from"./request.29e64ff5.js";import{u as g}from"./useToastMessage.bad030a2.js";import{P as h}from"./queues_request.8f3c70a9.js";import{a as _,x as C,v as b,o as y,h as x,i as t,j as u,D as w,E as B,r as k}from"./entry.86b9e19f.js";const q={class:"grid-nogutter grid col-12 mt-2"},E=t("div",{class:"col-12 md:col-12 pt-0 mb-2 flex align-items-end"},[t("i",{class:"pi pi-info-circle text-error mr-2 text-2xl"}),t("span",{class:"font-medium text-lg"},"Are you sure you want to clear the queue?")],-1),Q={class:"flex align-items-end grid justify-content-end p-fluid col-12 pb-0 mb-1 mt-2"},R={class:"mr-2"},S={class:"ml-2"},P=_({__name:"ClearQueue",setup($){const r=w("system-connection"),d=e=>{e==="disconnected"&&i()};r.on(d);const s=B("dialogRef");C(()=>{s.value.options.props.header="Clear all messages in Queue: "+s.value.data.channel});let n=null;const m=v(),l=g(),o=b(!1),p=()=>{o.value=!0,n=new h(s.value.data.channel),m.sendRequest(n).then(e=>{l.showSuccess(`Queue Channel ${s.value.data.channel.value} messages deleted successfully`,`${e.data.count} messages were deleted`)}).catch(e=>{e.isCanceled?l.showWarn("Request Canceled"):l.showError("Error clearing a Queue channel",e.message)}).finally(()=>{o.value=!1,s.value.close()})},i=()=>{n!==null&&n.abort(),s.value.close()};return(e,a)=>{const c=k("Button");return y(),x("div",q,[E,t("div",Q,[t("div",R,[u(c,{label:o.value?"Cancel":"No",class:"button-grey",icon:"pi pi-times",onClick:a[0]||(a[0]=f=>i()),style:{width:"10rem"}},null,8,["label"])]),t("div",S,[u(c,{label:"Yes",onClick:a[1]||(a[1]=f=>p()),class:"button-grey",loading:o.value,icon:"pi pi-check",style:{width:"10rem"}},null,8,["loading"])])])])}}});export{P as _};
